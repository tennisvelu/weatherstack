c
values
values.each do {|key,value| result += "#{key} : #{value}<br/>"}
c
response
c
ENV['API_KEY']
c
C
ENV['SESSIONNAME']
ENV['API_KEY']
exit
ENV['API_KEY']
c
@forecast
c
@forecast
c
ENV['API_KEY']
c
 coordinates = Geocoder.coordinates(@address)
c
 coordinates = Geocoder.coordinates(@address)
c
cached_forecast && cached_forecast.expires_at > Time.now
c
res["current"]
res=  HTTParty.get(a)
a="http://api.weatherstack.com/current?access_key=b7cfa7ecf26dd611ca141fdc763670e9&query=Hosur"
res=  HTTParty.get(a)
a="http://api.weatherstack.com/current?access_key=b7cfa7ecf26dd611ca141fdc763670e9&query=Hwdwdwed"
res=  HTTParty.get(a)
a="http://api.weatherstack.com/current?access_key=b7cfa7ecf26dd611ca141fdc763670e9&query=Hwdwdwed"
res=  HTTParty.get(a)
a="http://api.weatherstack.com/current?access_key=b7cfa7ecf26dd611ca141fdc763670e9&query=Hosur"
exit
 JSON.parse(res.body)
res=  HTTParty.get(a)
a="http://api.weatherstack.com/current?access_key=b7cfa7ecf26dd611ca141fdc763670e9&query=Hosur"
exit
@forecast["hourly"]["time"] 
@forecast["hourly"]["time"].count
    <%byebug%>
c
@forecast["hourly"]["time"]
c
@forecast["hourly"]["time"]
c
address
 @forecast = JSON.parse(response.body)
response.code
